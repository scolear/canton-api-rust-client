/*
 * JSON Ledger API HTTP endpoints
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.3.0-SNAPSHOT
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct JsActiveContract {
    #[serde(rename = "createdEvent")]
    pub created_event: Box<models::CreatedEvent>,
    /// A valid synchronizer id Required
    #[serde(rename = "synchronizerId")]
    pub synchronizer_id: String,
    /// Each corresponding assigned and unassigned event has the same reassignment_counter. This strictly increases with each unassign command for the same contract. Creation of the contract corresponds to reassignment_counter equals zero. This field will be the reassignment_counter of the latest observable activation event on this synchronizer, which is before the active_at_offset. Required
    #[serde(rename = "reassignmentCounter")]
    pub reassignment_counter: i64,
}

impl JsActiveContract {
    pub fn new(created_event: models::CreatedEvent, synchronizer_id: String, reassignment_counter: i64) -> JsActiveContract {
        JsActiveContract {
            created_event: Box::new(created_event),
            synchronizer_id,
            reassignment_counter,
        }
    }
}

