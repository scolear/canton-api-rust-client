/*
 * JSON Ledger API HTTP endpoints
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.3.0-SNAPSHOT
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetTransactionByIdRequest : Provided for backwards compatibility, it will be removed in the Canton version 3.4.0.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetTransactionByIdRequest {
    /// The ID of a particular transaction. Must be a valid LedgerString (as described in ``value.proto``). Required
    #[serde(rename = "updateId")]
    pub update_id: String,
    /// Provided for backwards compatibility, it will be removed in the Canton version 3.4.0. The parties whose events the client expects to see. Events that are not visible for the parties in this collection will not be present in the response. Each element must be a valid PartyIdString (as described in ``value.proto``). Must be set for GetTransactionTreeById request. Optional for backwards compatibility for GetTransactionById request: if defined transaction_format must be unset (falling back to defaults).
    #[serde(rename = "requestingParties", skip_serializing_if = "Option::is_none")]
    pub requesting_parties: Option<Vec<String>>,
    #[serde(rename = "transactionFormat", skip_serializing_if = "Option::is_none")]
    pub transaction_format: Option<Box<models::TransactionFormat>>,
}

impl GetTransactionByIdRequest {
    /// Provided for backwards compatibility, it will be removed in the Canton version 3.4.0.
    pub fn new(update_id: String) -> GetTransactionByIdRequest {
        GetTransactionByIdRequest {
            update_id,
            requesting_parties: None,
            transaction_format: None,
        }
    }
}

