/*
 * JSON Ledger API HTTP endpoints
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.3.0-SNAPSHOT
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetTransactionByOffsetRequest : Provided for backwards compatibility, it will be removed in the Canton version 3.4.0.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetTransactionByOffsetRequest {
    /// The offset of the transaction being looked up. Must be a valid absolute offset (positive integer). Required
    #[serde(rename = "offset")]
    pub offset: i64,
    /// Provided for backwards compatibility, it will be removed in the Canton version 3.4.0. The parties whose events the client expects to see. Events that are not visible for the parties in this collection will not be present in the response. Each element must be a valid PartyIdString (as described in ``value.proto``). Must be set for GetTransactionTreeByOffset request. Optional for backwards compatibility for GetTransactionByOffset request: if defined transaction_format must be unset (falling back to defaults).
    #[serde(rename = "requestingParties", skip_serializing_if = "Option::is_none")]
    pub requesting_parties: Option<Vec<String>>,
    #[serde(rename = "transactionFormat", skip_serializing_if = "Option::is_none")]
    pub transaction_format: Option<Box<models::TransactionFormat>>,
}

impl GetTransactionByOffsetRequest {
    /// Provided for backwards compatibility, it will be removed in the Canton version 3.4.0.
    pub fn new(offset: i64) -> GetTransactionByOffsetRequest {
        GetTransactionByOffsetRequest {
            offset,
            requesting_parties: None,
            transaction_format: None,
        }
    }
}

