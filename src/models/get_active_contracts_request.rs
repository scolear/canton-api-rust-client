/*
 * JSON Ledger API HTTP endpoints
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.3.0-SNAPSHOT
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetActiveContractsRequest : If the given offset is different than the ledger end, and there are (un)assignments in-flight at the given offset, the snapshot may fail with \"FAILED_PRECONDITION/PARTICIPANT_PRUNED_DATA_ACCESSED\". Note that it is ok to request acs snapshots for party migration with offsets other than ledger end, because party migration is not concerned with incomplete (un)assignments.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetActiveContractsRequest {
    #[serde(rename = "filter", skip_serializing_if = "Option::is_none")]
    pub filter: Option<Box<models::TransactionFilter>>,
    /// Provided for backwards compatibility, it will be removed in the Canton version 3.4.0. If enabled, values served over the API will contain more information than strictly necessary to interpret the data. In particular, setting the verbose flag to true triggers the ledger to include labels for record fields. Optional, if specified event_format must be unset.
    #[serde(rename = "verbose")]
    pub verbose: bool,
    /// The offset at which the snapshot of the active contracts will be computed. Must be no greater than the current ledger end offset. Must be greater than or equal to the last pruning offset. Required, must be a valid absolute offset (positive integer) or ledger begin offset (zero). If zero, the empty set will be returned.
    #[serde(rename = "activeAtOffset")]
    pub active_at_offset: i64,
    #[serde(rename = "eventFormat", skip_serializing_if = "Option::is_none")]
    pub event_format: Option<Box<models::EventFormat>>,
}

impl GetActiveContractsRequest {
    /// If the given offset is different than the ledger end, and there are (un)assignments in-flight at the given offset, the snapshot may fail with \"FAILED_PRECONDITION/PARTICIPANT_PRUNED_DATA_ACCESSED\". Note that it is ok to request acs snapshots for party migration with offsets other than ledger end, because party migration is not concerned with incomplete (un)assignments.
    pub fn new(verbose: bool, active_at_offset: i64) -> GetActiveContractsRequest {
        GetActiveContractsRequest {
            filter: None,
            verbose,
            active_at_offset,
            event_format: None,
        }
    }
}

