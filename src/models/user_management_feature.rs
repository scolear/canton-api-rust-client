/*
 * JSON Ledger API HTTP endpoints
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.3.0-SNAPSHOT
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserManagementFeature {
    /// Whether the Ledger API server provides the user management service.
    #[serde(rename = "supported")]
    pub supported: bool,
    /// The maximum number of rights that can be assigned to a single user. Servers MUST support at least 100 rights per user. A value of 0 means that the server enforces no rights per user limit.
    #[serde(rename = "maxRightsPerUser")]
    pub max_rights_per_user: i32,
    /// The maximum number of users the server can return in a single response (page). Servers MUST support at least a 100 users per page. A value of 0 means that the server enforces no page size limit.
    #[serde(rename = "maxUsersPageSize")]
    pub max_users_page_size: i32,
}

impl UserManagementFeature {
    pub fn new(supported: bool, max_rights_per_user: i32, max_users_page_size: i32) -> UserManagementFeature {
        UserManagementFeature {
            supported,
            max_rights_per_user,
            max_users_page_size,
        }
    }
}

