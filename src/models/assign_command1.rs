/*
 * JSON Ledger API HTTP endpoints
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.3.0-SNAPSHOT
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AssignCommand1 : Assign a contract
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AssignCommand1 {
    /// The ID from the unassigned event to be completed by this assignment. Must be a valid LedgerString (as described in ``value.proto``). Required
    #[serde(rename = "unassignId")]
    pub unassign_id: String,
    /// The ID of the source synchronizer Must be a valid synchronizer id Required
    #[serde(rename = "source")]
    pub source: String,
    /// The ID of the target synchronizer Must be a valid synchronizer id Required
    #[serde(rename = "target")]
    pub target: String,
}

impl AssignCommand1 {
    /// Assign a contract
    pub fn new(unassign_id: String, source: String, target: String) -> AssignCommand1 {
        AssignCommand1 {
            unassign_id,
            source,
            target,
        }
    }
}

