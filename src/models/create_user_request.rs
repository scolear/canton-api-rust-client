/*
 * JSON Ledger API HTTP endpoints
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.3.0-SNAPSHOT
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CreateUserRequest :  RPC requests and responses ///////////////////////////  Required authorization: ``HasRight(ParticipantAdmin) OR IsAuthenticatedIdentityProviderAdmin(user.identity_provider_id)``
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateUserRequest {
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<Box<models::User>>,
    /// The rights to be assigned to the user upon creation, which SHOULD include appropriate rights for the ``user.primary_party``. Optional
    #[serde(rename = "rights", skip_serializing_if = "Option::is_none")]
    pub rights: Option<Vec<models::Right>>,
}

impl CreateUserRequest {
    ///  RPC requests and responses ///////////////////////////  Required authorization: ``HasRight(ParticipantAdmin) OR IsAuthenticatedIdentityProviderAdmin(user.identity_provider_id)``
    pub fn new() -> CreateUserRequest {
        CreateUserRequest {
            user: None,
            rights: None,
        }
    }
}

