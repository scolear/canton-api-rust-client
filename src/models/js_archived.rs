/*
 * JSON Ledger API HTTP endpoints
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.3.0-SNAPSHOT
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct JsArchived {
    #[serde(rename = "archivedEvent")]
    pub archived_event: Box<models::ArchivedEvent>,
    /// Required The synchronizer which sequenced the archival of the contract
    #[serde(rename = "synchronizerId")]
    pub synchronizer_id: String,
}

impl JsArchived {
    pub fn new(archived_event: models::ArchivedEvent, synchronizer_id: String) -> JsArchived {
        JsArchived {
            archived_event: Box::new(archived_event),
            synchronizer_id,
        }
    }
}

