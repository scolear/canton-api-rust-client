/*
 * JSON Ledger API HTTP endpoints
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.3.0-SNAPSHOT
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetEventsByContractIdRequest {
    /// The contract id being queried. Required
    #[serde(rename = "contractId")]
    pub contract_id: String,
    /// Provided for backwards compatibility, it will be removed in the Canton version 3.4.0. The parties whose events the client expects to see. The events associated with the contract id will only be returned if the requesting parties includes at least one party that is a stakeholder of the event. For a definition of stakeholders see https://docs.daml.com/concepts/ledger-model/ledger-privacy.html#contract-observers-and-stakeholders Optional, if some parties specified, event_format needs to be unset.
    #[serde(rename = "requestingParties", skip_serializing_if = "Option::is_none")]
    pub requesting_parties: Option<Vec<String>>,
    #[serde(rename = "eventFormat", skip_serializing_if = "Option::is_none")]
    pub event_format: Option<Box<models::EventFormat>>,
}

impl GetEventsByContractIdRequest {
    pub fn new(contract_id: String) -> GetEventsByContractIdRequest {
        GetEventsByContractIdRequest {
            contract_id,
            requesting_parties: None,
            event_format: None,
        }
    }
}

